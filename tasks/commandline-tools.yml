- name: software from native sources
  ansible.builtin.apt:
    update_cache: true
    install_recommends: true
    pkg:
    - tmux
    - fonts-powerline   # starship requirement
    - fonts-firacode    # starship requirement

- ansible.builtin.set_fact:
    github_repository: "starship/starship"
    github_package_name: "starship-x86_64-unknown-linux-gnu.tar.gz"

- name: "{{ github_repository }} - query github api content for latest release"
  ansible.builtin.uri:
    url: "{{github_proxy_proto}}://{{github_proxy_ip}}:{{github_proxy_port}}{{github_proxy_api_path}}/repos/{{ github_repository }}/releases/latest"
    validate_certs: false
    return_content: true
  register: api

- name: "{{ github_repository }} - convert api content to json"
  ansible.builtin.set_fact:
    api_json: "{{ api.content | from_json }}"

- name: "{{ github_repository }} - installing {{ github_package_name }}:latest" 
  loop: "{{ api_json.assets }}"
  loop_control:
    label: "{{ item.name }}"
  debug:
    msg: '{{github_proxy_proto}}://{{github_proxy_ip}}:{{github_proxy_port}}{{github_proxy_path}}{{ item.browser_download_url | urlsplit("path") }}'
  # ansible.builtin.unarchive:
  #   src: '{{github_proxy_proto}}://{{github_proxy_ip}}:{{github_proxy_port}}{{github_proxy_path}}{{ item.browser_download_url | urlsplit("path") }}'
  #   dest: /usr/local/bin
  when: github_package_name == item.name
